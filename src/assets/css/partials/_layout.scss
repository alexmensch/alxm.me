body {
  background-color: var(--color-grid-upper);

  @each $theme in $section-palettes {
    &.#{$theme} {
      background-color: var(--color-upper-#{$theme});

      >.container-grid {
        >.header, >.upper {
          background-color: var(--color-upper-#{$theme});
        }
        >.lower, .collection-grid.section-title {
          background-color: var(--color-lower-#{$theme});
        }
      }
    }
  }

  // TODO: Add color inversion option into $section-palettes
  &.projects {
    .container-grid {
      >.header {
        a { color: white; }
        border-color: white;
      }
      >.title, >.introduction {
        color: white;
        a { color: white; }
      }
    }
  }
}

.container-grid {
  @each $section in upper, lower {
    >.#{$section} {
      grid-area: #{$section};
      background-color: var(--color-grid-#{$section});
    }
  }
}

.container-grid {
  overflow: scroll;
  scroll-padding-top: $nav-header-height + 5px;

  height: 100vh;
  display: grid;
  /* grid-template-columns:
    [header-start home-name-start upper-start lower-start nav-start title-start intro-start content-start footer-start] minmax(auto, 960px)
    [home-name-end nav-end title-end header-end upper-end lower-end intro-end content-end footer-end];
    */
  grid-template-columns:
      [header-start home-name-start upper-start lower-start] 1fr
      [home-name-end nav-start title-start intro-start content-start footer-start] auto
      [nav-end title-end intro-end content-end footer-end] 1fr
      [header-end upper-end lower-end];
  grid-template-rows:
    [upper-start header-start home-name-start nav-start] min-content
    [header-end home-name-end nav-end title-start] min-content
    [title-end intro-start] min-content
    [intro-end upper-end lower-start content-start] auto
    [content-end footer-start] min-content
    [footer-end lower-end];

  >.header {
    grid-area: header;
    border-bottom: $nav-header-border solid var(--color-text);
    height: $nav-header-height;

    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;

    display: grid;
    grid-template-columns: subgrid;

    .home-name, .navigation {
      display: flex;
      flex-flow: row nowrap;
      align-items: baseline;

      a, span {
        padding: 0.5em 0.5em;

        color: var(--color-text);
        white-space: nowrap;
      }
    }

    .home-name {
      grid-area: nav;
      justify-content: flex-start;

      a, span {
        font-weight: $font-weight-root;
      }
    }
    
    .navigation {
      grid-area: nav;
      justify-content: flex-end;

      a, span {
        font-weight: calc($font-weight-root - 100);
      }
    }

    &.fullpage > .navigation {
      span {
        visibility: hidden;
      }
    }
  }

  >.title, >.introduction, >.content {
    padding: 0 0.5rem;
  }

  >.title {
    grid-area: title;

    font-size: $font-size-section-title;
    font-weight: $font-weight-section-title;
    letter-spacing: -0.02em;
    line-height: $line-height-title;
    margin: calc(0.3 * $font-size-section-title) 0;
  }

  >.introduction {
    grid-area: intro;

    padding-bottom: calc($grid-gap * 2);

    columns: 1 auto;
    column-gap: $grid-gap;
    column-fill: balance;
    orphans: 3;
    widows: 3;

    >p:first-child {
      margin-top: 0;

      &::first-letter {
        padding: 0 0.15em 0 0;

        font-size: 3.1rem;
        float: left;
        line-height: 1;
      }
    }
  }

  >.content {
    grid-area: content;

    padding-top: $grid-gap;

    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
  }

  >.footer {
    grid-area: footer;

    text-align: center;
    padding: 1em 0;
    font-size: 0.8rem;
    color: var(--color-muted);
  }
}
